---
import type Complexity from "../components/visualiser/description/BigONotation.astro";
import Algorithm from "../layouts/Algorithm.astro";
const best: Complexity = { expression: "n", color: "orange" };
const average: Complexity = { expression: "n^2", color: "red" };
const worst: Complexity = { expression: "n^2", color: "red" };
const space: Complexity = { expression: "1", color: "green" };
---

<Algorithm
  title="Insertion Sort"
  best={best}
  average={average}
  worst={worst}
  space={space}
>
  <p>
    Insertion sort is a simple sorting algorithm that organizes elements in an
    array by repeatedly shifting elements to the right until the correct
    position for the current element is found. For each element, it compares it with
    the elements in the sorted sublist and shifts elements that are greater than
    the current element to the right until the correct position for the current
    element is found.
  </p>
  <a id="discover" href="#">Read more</a>
  <p id="additional" class="hidden">
    Insertion sort has a time complexity of O(nÂ²) on average, but it has a
    better performance on small data sets and on lists that are already
    partially sorted. Because of this characteristic, insertion sort is often
    used as a simple sorting algorithm in embedded systems and other
    resource-constrained environments. It's also a good choice for educational
    purposes and simple cases.
  </p>
</Algorithm>

<script src="../scripts/InsertionSort.ts"></script>
